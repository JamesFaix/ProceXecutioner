<Window x:Class="ProceXecutioner.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="ProceXecutioner" Height="426" Width="614" Icon="/Resources/Axe.ico">
    <Grid ShowGridLines="False">

        <!--Grid Settings-->
        <Grid.Background>
            <SolidColorBrush Color="#FFE4F5D3"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <!-- -->

        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch"/>

        <!--Labels-->
        <Border BorderBrush="Black" BorderThickness="1" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                Grid.Column="0" Grid.Row="0">
            <Grid Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>
                
                <Label x:Name="RunningProcessesLabel" Content="Running Processes" Grid.Column="0"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Label.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </Label.Background>
                </Label>
                <Label x:Name="RunningProcessCountLabel" Content="{Binding Path=TotalInstanceCount}"
                       Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Label.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </Label.Background>
                </Label>
            </Grid>
        </Border>

        <Border BorderBrush="Black" BorderThickness="1" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                Grid.Column="2" Grid.Row="0">
            <Grid Grid.Column="1" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>

                <Label x:Name="TargetProcessesLabel" Content="Target Processes" Grid.Column="0"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Label.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </Label.Background>
                </Label>
                <Label x:Name="TargetProcessCountLabel" Content="{Binding Path=ArmedRunningProcessCount}"
                       Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    <Label.Background>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </Label.Background>
                </Label>
            </Grid>
        </Border>
        <!-- -->

        <!-- Buttons -->
        <Grid Grid.Column="0" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="KillButton" Content="Kill armed" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" 
                Click="KillButton_Click"
                Grid.Column="0" />
        </Grid>

        <Grid Grid.Column="2" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="SaveButton" Content="Save targets" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0"
                Click="SaveButton_Click"
                Grid.Column="0"/>

            <Button x:Name="RevertButton" Content="Load targets" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0"
                Click="RevertButton_Click"
                Grid.Column="1"/>
        </Grid>
        <!-- -->

        <!-- Grids -->
        <DataGrid x:Name="RunningProcessesGrid" ItemsSource="{Binding}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0,0,0,0"
                  AutoGenerateColumns="False"
                  Grid.Column="0"  Grid.Row="1">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="#" Width="20" Binding="{Binding InstanceCount}"/>
            </DataGrid.Columns>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Armed}" Value="True">
                            <Setter Property="Background" Value="Pink"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Armed}" Value="False">
                            <Setter Property="Background" Value="Wheat"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>

        <DataGrid x:Name="TargetProcessesGrid" ItemsSource="{Binding}" IsSynchronizedWithCurrentItem="true"
              HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Margin="0,0,0,0" 
                  AutoGenerateColumns="False" GotFocus="TargetProcessesGrid_GotFocus" 
                  CellEditEnding="TargetProcessesGrid_CellEditEnding" 
                  CurrentCellChanged="TargetProcessesGrid_CurrentCellChanged" TextInput="TargetProcessesGrid_TextInput" 
                  Grid.Column="2" Grid.Row="1">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="!" Width="20" >
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=Armed, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

               <!-- <DataGridCheckBoxColumn Header="Armed" Width="50" Binding="{Binding Armed}" />-->
                <DataGridTextColumn Header="Group Name" Width="75" Binding="{Binding Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Processes" Width="*" Binding="{Binding ProcessNameList}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>

            <DataGrid.RowStyle >
                <Style TargetType="DataGridRow" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Armed}" Value="True" >
                            <Setter Property="Background" Value="Pink"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Armed}" Value="False">
                            <Setter Property="Background" Value="Wheat"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

        </DataGrid>
        <!-- -->
    </Grid>
</Window>
